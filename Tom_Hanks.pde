import ddf.minim.*;

Minim minim;
AudioPlayer player;

float DefaultScale = 1.2;
float FR = 26;
float SampleRate = 6;

boolean running = true;
boolean DEBUGGING = false;
boolean SoundOn = true;

float t = 0;
float scale = DefaultScale;
color transparent = color(0, 0, 0, 0);
color skin = color(217, 152, 112);
color hair = color(45, 40, 38);
color lips = color(182, 85, 78);
color brown = color(128, 84, 71);
color black = color(60, 60, 60);
color red = color(99, 45, 64);
color eyes = color(131, 131, 97);
color white = color(255, 255, 255);
ArrayList<PVector> points = new ArrayList<PVector>();
ArrayList<Integer> lineColor = new ArrayList<Integer>();
ArrayList<Integer> strokes = new ArrayList<Integer>();

void setup()
{
  fullScreen(P2D);
  //size(800, 800, P2D);
  background(0);
  noFill();
  smooth();
  frameRate(FR);
  
  minim = new Minim(this);
  player = minim.loadFile("Swing Jazz.mp3");
  if(SoundOn)
    player.loop();
}

void keyPressed() {
  if(key == ' ')
    running = !running;
  if(key == 'r')
    reset();
}

void reset()
{
  frameCount = -1;
  t = 0;
  lineColor.clear();
  strokes.clear();
  points.clear();
  minim.stop();
  minim = new Minim(this);
  if(SoundOn)
    player.loop();
  scale = DefaultScale;
}

float updateT(float T)
{
  T += 0.012;
  
  if(T >= 280.094) { //END
    strokes.add(1);
    lineColor.add(color(0, 0, 0));
    return 92 * PI;
  }
  if(T >= 276.484 && T < 280.094) { //SHIRT
    strokes.add(3);
    lineColor.add(black);
    return T;
  }
  if(T >= 267.086 && T < 276.484) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 276.484;
  }
  if(T >= 263.904 && T < 267.086) { //SHIRT
    strokes.add(3);
    if(T < 265.790)
      lineColor.add(black);
    else
      lineColor.add(red);
    return T - 0.008;
  }
  if(T >= 254.506 && T < 263.904) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 263.904;
  }
  if(T >= 251.336 && T < 254.506) { //SHIRT
    strokes.add(3);
    if(T < 253.079)
      lineColor.add(black);
    else
      lineColor.add(white);
    return T - 0.008;
  }
  if(T >= 241.973 && T < 251.336) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 251.336;
  }
  if(T >= 238.795 && T < 241.973) { //SHIRT
    strokes.add(3);
    lineColor.add(skin);
    return T;
  }
  if(T >= 229.561 && T < 238.795) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 238.795;
  }
  if(T >= 226.203 && T < 229.561) { //SHIRT V
    strokes.add(3);
    if(T < 227.982)
      lineColor.add(skin);
    else
      lineColor.add(hair);
    return T - 0.004;
  }
  if(T >= 216.881 && T < 226.203) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 226.203;
  }
  if(T >= 213.635 && T < 216.881) { //RIGHT EAR 
    strokes.add(2);
    lineColor.add(skin);
    return T - 0.004;
  }
  if(T >= 204.329 && T < 213.635) { //SKIP 
    strokes.add(1);
    lineColor.add(white);
    return 213.635;
  }
  if(T >= 201.091 && T < 204.329) { //CHIN 
    strokes.add(2);
    lineColor.add(skin);
    return T;
  }
  if(T >= 191.601 && T < 201.091) { //SKIP 
    strokes.add(1);
    lineColor.add(white);
    return 201.091;
  }
  if(T >= 188.499 && T < 191.601) { //FACE AND LEFT EAR 
    strokes.add(2);
    lineColor.add(skin);
    return T - 0.004;
  }
  if(T >= 179.126 && T < 188.499) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 188.499;
  }
  if(T >= 175.932 && T < 179.126) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.008;
  }
  if(T >= 166.094 && T < 175.932) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 175.932;
  }
  if(T >= 163.364 && T < 166.094) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.01;
  }
  if(T >= 153.970 && T < 163.364) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 163.364;
  }
  if(T >= 150.804 && T < 153.970) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.008;
  }
  if(T >= 141.465 && T < 150.804) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 150.804;
  }
  if(T >= 138.237 && T < 141.465) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.01;
  }
  if(T >= 129.171 && T < 138.237) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 138.237;
  }
  if(T >= 125.669 && T < 129.171) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.008;
  }
  if(T >= 116.303 && T < 125.669) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 125.669;
  }
  if(T >= 113.105 && T < 116.303) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.01;
  }
  if(T >= 103.785 && T < 113.105) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 113.105;
  }
  if(T >= 100.539 && T < 103.785) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.01;
  }
  if(T >= 91.430 && T < 100.539) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 100.539;
  }
  if(T >= 87.974 && T < 91.430) { //HAIR
    strokes.add(2);
    lineColor.add(hair);
    return T - 0.008;
  }
  if(T >= 78.517 && T < 87.974) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 87.974;
  }
  if(T >= 75.409 && T < 78.517) { //LIPS
    strokes.add(2);
    lineColor.add(lips);
    return T;
  }
  if(T >= 66.168 && T < 75.409) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 75.409;
  }
  if(T >= 62.844 && T < 66.168) { //NOSE 2
    strokes.add(2);
    lineColor.add(skin);
    return T;
  }
  if(T >= 53.555 && T < 62.844) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 62.844;
  }
  if(T >= 50.267 && T < 53.555) { //NOSE
    strokes.add(2);
    lineColor.add(skin);
    return T;
  }
  if(T >= 44.074 && T < 50.267) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 50.267;
  }
  if(T >= 37.702 && T < 44.074) { //RIGHT EYE
    strokes.add(2);
    if(T < 39.670)
      lineColor.add(eyes);
    else
      lineColor.add(skin);
    return T;
  }
  if(T >= 31.498 && T < 37.702) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 37.702;
  }
  if(T >= 25.259 && T < 31.498) { //LEFT EYE
    strokes.add(2);
    if(T < 27.262)
      lineColor.add(eyes);
    else
      lineColor.add(skin);
    return T;
  }
  if(T >= 18.875 && T < 25.259) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 25.259;
  }
  if(T >= 12.588 && T < 18.875) { //RIGHT EYEBROW
    strokes.add(2);
    lineColor.add(brown);
    return T;
  }
  if(T >= 6.372 && T < 12.588) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 12.588;
  }
  else { //LEFT EYEBROW
    strokes.add(2);
    lineColor.add(brown);
  }
  
  return T;
}

void draw()
{ 
  //if(frameCount < (FR/2.0)) return;
  if(t <= 92 * PI && running)
  {
    for(int z = 0; z<SampleRate; z++) {
      t = updateT(t);
      points.add(new PVector(x(t), -y(t)));
      if(DEBUGGING)
        print(t + "\n");
    }
  } else {
    if(!DEBUGGING)
      scale += 0.0016;
  }
  
  translate(width/2 - 30, height/2 - 150);
  background(0);
  
  beginShape();
  for(int i = 0; i < points.size(); i++)
  {
    if(points.get(i).x == 0 && points.get(i).y == 0) continue;
    strokeWeight(strokes.get(i));
    stroke(lineColor.get(i));
    point(points.get(i).x * scale, points.get(i).y * scale);
  }
  endShape();
}

float sgn(float x)
{
  if(x == 0) return 0;
  else if(x > 0) return 1;
  else return -1;
}

float theta(float x)
{
  if(x == 0) return 0.5;
  else if(x > 0) return 1;
  else return 0;
}

float SIN(float x)
{
  return sin(x);
}

float x(float t)
{
  return ((-1.0/17*sin(20.0/13 - 20*t) - 1.0/11*sin(14.0/9 - 18*t) - 1.0/97*sin(9.0/7 - 17*t) - 1.0/8*sin(32.0/21 - 16*t) - 1.0/50*sin(5.0/4 - 15*t) - 1.0/6*sin(17.0/11 - 14*t) - 1.0/57*sin(9.0/7 - 13*t) - 1.0/5*sin(17.0/11 - 12*t) - 3.0/13*sin(14.0/9 - 10*t) - 3.0/10*sin(14.0/9 - 8*t) - 1.0/3*sin(11.0/7 - 4*t) + 352.0/13*sin(t + 11.0/7) + 3.0/10*sin(2*t + 50.0/11) + 36.0/13*sin(3*t + 11.0/7) + 9.0/11*sin(5*t + 19.0/12) + 4.0/15*sin(6*t + 61.0/13) + 3.0/11*sin(7*t + 14.0/9) + 1.0/13*sin(9*t + 14.0/9) + 1.0/50*sin(21*t + 28.0/17) + 1.0/34*sin(22*t + 33.0/7) + 1.0/33*sin(23*t + 32.0/21) + 1.0/62*sin(24*t + 37.0/8) + 1.0/26*sin(25*t + 5.0/3) + 1.0/27*sin(27*t + 8.0/5) + 1412.0/7)*theta(91*PI -t)*theta(t - 87*PI) + (-1.0/10*sin(3.0/2 - 50*t) - 3.0/14*sin(3.0/2 - 48*t) - 1.0/10*sin(10.0/9 - 47*t) - 1.0/4*sin(14.0/11 - 46*t) - 2.0/9*sin(11.0/8 - 45*t) - 1.0/39*sin(6.0/5 - 43*t) - 2.0/11*sin(9.0/7 - 42*t) - 3.0/11*sin(3.0/2 - 41*t) - 1.0/8*sin(15.0/11 - 39*t) - 4.0/7*sin(10.0/7 - 38*t) - 1.0/14*sin(4.0/7 - 37*t) - 2.0/9*sin(19.0/13 - 36*t) - 1.0/3*sin(7.0/5 - 33*t) - 3.0/10*sin(37.0/25 - 32*t) -sin(22.0/15 - 29*t) - 1.0/22*sin(4.0/11 - 28*t) - 10.0/19*sin(14.0/9 - 24*t) - 6.0/5*sin(19.0/13 - 23*t) - 1.0/8*sin(5.0/4 - 22*t) - 25.0/17*sin(3.0/2 - 20*t) - 3.0/2*sin(16.0/11 - 19*t) - 9.0/2*sin(20.0/13 - 14*t) - 7.0/8*sin(14.0/9 - 10*t) - 245.0/9*sin(14.0/9 - 5*t) - 211.0/15*sin(17.0/11 - 4*t) - 154.0/15*sin(14.0/9 - 3*t) - 7.0/8*sin(14.0/9 - 2*t) - 987.0/19*sin(11.0/7 -t) + 293.0/49*sin(6*t + 11.0/7) + 25.0/8*sin(7*t + 21.0/13) + 11.0/5*sin(8*t + 18.0/11) + 40.0/7*sin(9*t + 8.0/5) + 1.0/88*sin(11*t + 89.0/30) + 5.0/16*sin(12*t + 23.0/5) + 23.0/14*sin(13*t + 11.0/7) + 1.0/10*sin(15*t + 1.0/2) + 19.0/13*sin(16*t + 21.0/13) + 1.0/7*sin(17*t + 103.0/26) + 4.0/3*sin(18*t + 8.0/5) + 9.0/11*sin(21*t + 13.0/8) + 12.0/7*sin(25*t + 18.0/11) + 3.0/5*sin(26*t + 65.0/14) + 5.0/11*sin(27*t + 13.0/8) + 3.0/11*sin(30*t + 8.0/5) + 4.0/9*sin(31*t + 5.0/3) + 3.0/7*sin(34*t + 17.0/10) + 1.0/8*sin(35*t + 79.0/39) + 3.0/10*sin(40*t + 18.0/11) + 1.0/7*sin(44*t + 19.0/11) + 1.0/7*sin(49*t + 8.0/5) + 1.0/53*sin(51*t + 22.0/5) - 793.0/10)*theta(87*PI -t)*theta(t - 83*PI) + (-1.0/6*sin(17.0/11 - 42*t) - 1.0/6*sin(17.0/11 - 41*t) - 5.0/11*sin(29.0/19 - 37*t) - 8.0/7*sin(14.0/9 - 36*t) - 12.0/25*sin(26.0/17 - 31*t) - 4.0/11*sin(11.0/7 - 29*t) - 3.0/7*sin(14.0/9 - 27*t) - 21.0/8*sin(14.0/9 - 20*t) + 307.0/6*sin(t + 11.0/7) + 569.0/8*sin(2*t + 33.0/7) + 179.0/11*sin(3*t + 11.0/7) + 385.0/12*sin(4*t + 11.0/7) + 169.0/9*sin(5*t + 11.0/7) + 146.0/9*sin(6*t + 11.0/7) + 5.0/11*sin(7*t + 26.0/17) + 6.0/7*sin(8*t + 65.0/14) + 5.0/12*sin(9*t + 60.0/13) + 1.0/12*sin(10*t + 29.0/11) + 249.0/31*sin(11*t + 33.0/7) + 13.0/4*sin(12*t + 11.0/7) + 25.0/4*sin(13*t + 11.0/7) + 60.0/17*sin(14*t + 11.0/7) + 9.0/8*sin(15*t + 33.0/7) + 5.0/8*sin(16*t + 47.0/10) + 35.0/8*sin(17*t + 19.0/12) + 13.0/6*sin(18*t + 47.0/10) + 1.0/10*sin(19*t + 14.0/3) + 1.0/2*sin(21*t + 19.0/12) + 9.0/8*sin(22*t + 8.0/5) + 2*sin(23*t + 8.0/5) + 30.0/13*sin(24*t + 11.0/7) + 23.0/13*sin(25*t + 47.0/10) + 1.0/5*sin(26*t + 19.0/12) + 1.0/8*sin(28*t + 21.0/11) + 17.0/12*sin(30*t + 19.0/12) + 3.0/10*sin(32*t + 11.0/7) + 4.0/11*sin(33*t + 37.0/8) + 47.0/19*sin(34*t + 19.0/12) + 2.0/5*sin(35*t + 65.0/14) + 1.0/4*sin(38*t + 27.0/16) + 26.0/25*sin(39*t + 21.0/13) + 1.0/14*sin(40*t + 13.0/3) + 1.0/17*sin(43*t + 9.0/5) + 525.0/11)*theta(83*PI -t)*theta(t - 79*PI) + (-15.0/14*sin(11.0/7 - 4*t) - 49.0/12*sin(11.0/7 - 3*t) - 6*sin(11.0/7 - 2*t) - 623.0/17*sin(11.0/7 -t) + 452.0/9)*theta(79*PI -t)*theta(t - 75*PI) + (-9.0/14*sin(14.0/9 - 32*t) - 3.0/10*sin(11.0/7 - 30*t) - 8.0/7*sin(11.0/7 - 28*t) - 2.0/7*sin(11.0/7 - 26*t) - 5.0/9*sin(17.0/11 - 23*t) - 5.0/9*sin(14.0/9 - 16*t) - 11.0/16*sin(17.0/11 - 15*t) - 6.0/7*sin(14.0/9 - 11*t) - 101.0/25*sin(11.0/7 - 7*t) - 32.0/21*sin(14.0/9 - 6*t) + 321.0/5*sin(t + 33.0/7) + 337.0/9*sin(2*t + 33.0/7) + 134.0/11*sin(3*t + 33.0/7) + 7.0/12*sin(4*t + 79.0/17) + 9.0/2*sin(5*t + 11.0/7) + 3.0/11*sin(8*t + 19.0/12) + 20.0/9*sin(9*t + 11.0/7) + 4.0/7*sin(10*t + 61.0/13) + 5.0/16*sin(12*t + 3.0/2) + 3.0/8*sin(13*t + 8.0/5) + 1.0/12*sin(14*t + 19.0/12) + 1.0/4*sin(17*t + 51.0/11) + 2.0/11*sin(18*t + 23.0/5) + 3.0/7*sin(19*t + 61.0/13) + 10.0/13*sin(20*t + 33.0/7) + 1.0/37*sin(21*t + 15.0/8) + 3.0/10*sin(22*t + 13.0/8) + 1.0/4*sin(24*t + 23.0/15) + 1.0/14*sin(25*t + 19.0/12) + 26.0/25*sin(27*t + 11.0/7) + 5.0/8*sin(29*t + 19.0/12) + 3.0/11*sin(31*t + 19.0/12) + 4.0/7*sin(33*t + 11.0/7) + 1.0/2*sin(34*t + 47.0/10) + 5.0/16*sin(35*t + 19.0/12) + 1455.0/28)*theta(75*PI -t)*theta(t - 71*PI) + (-1.0/4*sin(20.0/13 - 18*t) - 1.0/17*sin(9.0/10 - 12*t) -sin(11.0/7 - 8*t) - 5.0/7*sin(17.0/12 - 6*t) - 29.0/13*sin(14.0/9 -t) + 221.0/37*sin(2*t + 11.0/7) + 21.0/8*sin(3*t + 47.0/10) + 49.0/6*sin(4*t + 33.0/7) + 149.0/14*sin(5*t + 11.0/7) + 49.0/9*sin(7*t + 11.0/7) + 3.0/8*sin(9*t + 14.0/3) + 4.0/7*sin(10*t + 3.0/2) + 11.0/4*sin(11*t + 14.0/9) + 11.0/8*sin(13*t + 17.0/11) + 18.0/17*sin(14*t + 23.0/15) + 8.0/17*sin(15*t + 16.0/11) + 17.0/16*sin(16*t + 17.0/11) + 37.0/38*sin(17*t + 32.0/21) + 2.0/3*sin(19*t + 65.0/14) + 4.0/7*sin(20*t + 55.0/12) + 6.0/7*sin(21*t + 61.0/13) + 5.0/7*sin(22*t + 37.0/8) + 26.0/25*sin(23*t + 37.0/8) + 6.0/7*sin(24*t + 79.0/17) + 1111.0/12)*theta(71*PI -t)*theta(t - 67*PI) + (-1.0/39*sin(25.0/17 - 28*t) - 1.0/17*sin(3.0/2 - 20*t) - 1.0/5*sin(26.0/17 - 14*t) - 3.0/10*sin(14.0/9 - 8*t) - 7.0/15*sin(14.0/9 - 6*t) + 632.0/11*sin(t + 11.0/7) + 129.0/26*sin(2*t + 33.0/7) + 19.0/13*sin(3*t + 17.0/11) + 8.0/11*sin(4*t + 14.0/3) + 20.0/9*sin(5*t + 11.0/7) + 23.0/22*sin(7*t + 8.0/5) + 3.0/8*sin(9*t + 11.0/7) + 1.0/7*sin(10*t + 37.0/8) + 1.0/5*sin(11*t + 20.0/13) + 2.0/9*sin(12*t + 33.0/7) + 2.0/13*sin(13*t + 8.0/5) + 1.0/9*sin(15*t + 8.0/5) + 1.0/31*sin(16*t + 85.0/19) + 1.0/5*sin(17*t + 14.0/9) + 1.0/14*sin(18*t + 37.0/8) + 1.0/12*sin(19*t + 19.0/12) + 1.0/13*sin(21*t + 5.0/3) + 1.0/8*sin(23*t + 13.0/8) + 1.0/11*sin(25*t + 26.0/17) + 1.0/90*sin(26*t + 95.0/21) + 1.0/15*sin(27*t + 13.0/8) + 1.0/17*sin(29*t + 5.0/3) - 186.0/7)*theta(67*PI -t)*theta(t - 63*PI) + (-1.0/17*sin(3.0/2 - 39*t) - 1.0/26*sin(19.0/13 - 37*t) - 1.0/12*sin(7.0/5 - 35*t) - 1.0/28*sin(32.0/21 - 31*t) - 1.0/8*sin(14.0/9 - 27*t) - 1.0/9*sin(3.0/2 - 25*t) - 1.0/7*sin(17.0/11 - 17*t) - 1.0/5*sin(14.0/9 - 15*t) - 7.0/10*sin(23.0/15 - 11*t) - 20.0/7*sin(17.0/11 - 9*t) - 3.0/5*sin(11.0/7 - 7*t) + 866.0/11*sin(t + 11.0/7) + 259.0/8*sin(2*t + 11.0/7) + 135.0/11*sin(3*t + 11.0/7) + 7.0/8*sin(4*t + 14.0/9) + 19.0/11*sin(5*t + 19.0/12) + 1.0/6*sin(6*t + 13.0/9) + 16.0/7*sin(8*t + 19.0/12) + 17.0/6*sin(10*t + 19.0/12) + 1.0/4*sin(12*t + 3.0/2) + 1.0/12*sin(13*t + 12.0/7) + 1.0/8*sin(14*t + 10.0/7) + 4.0/7*sin(16*t + 19.0/12) + 4.0/11*sin(18*t + 11.0/7) + 1.0/8*sin(19*t + 75.0/16) + 1.0/14*sin(20*t + 13.0/9) + 1.0/18*sin(21*t + 15.0/8) + 1.0/15*sin(22*t + 14.0/11) + 1.0/4*sin(23*t + 21.0/13) + 3.0/13*sin(24*t + 20.0/13) + 3.0/14*sin(26*t + 11.0/7) + 2.0/9*sin(28*t + 14.0/9) + 1.0/44*sin(29*t + 21.0/16) + 3.0/13*sin(30*t + 14.0/9) + 1.0/24*sin(32*t + 15.0/11) + 1.0/6*sin(34*t + 11.0/7) + 1.0/6*sin(36*t + 8.0/5) + 1.0/9*sin(38*t + 8.0/5) - 621.0/8)*theta(63*PI -t)*theta(t - 59*PI) + (-1.0/8*sin(14.0/9 - 33*t) - 1.0/6*sin(11.0/7 - 31*t) - 3.0/11*sin(14.0/9 - 28*t) - 2.0/5*sin(14.0/9 - 25*t) - 1.0/8*sin(3.0/2 - 18*t) - 13.0/25*sin(14.0/9 - 15*t) - 25.0/11*sin(11.0/7 - 13*t) - 7.0/9*sin(11.0/7 - 2*t) + 47.0/9*sin(t + 11.0/7) + 19.0/15*sin(3*t + 33.0/7) + 6.0/7*sin(4*t + 33.0/7) + 9.0/14*sin(5*t + 33.0/7) + 1.0/8*sin(6*t + 17.0/11) + 5.0/6*sin(7*t + 11.0/7) + 1.0/8*sin(8*t + 16.0/11) + 4.0/5*sin(9*t + 11.0/7) + 4.0/7*sin(10*t + 11.0/7) + 1.0/6*sin(11*t + 34.0/23) + 30.0/31*sin(12*t + 8.0/5) + 11.0/12*sin(14*t + 19.0/12) + 6.0/11*sin(16*t + 11.0/7) + 2.0/11*sin(17*t + 38.0/25) + 5.0/12*sin(19*t + 19.0/12) + 5.0/11*sin(20*t + 17.0/11) + 1.0/34*sin(21*t + 31.0/16) + 9.0/13*sin(22*t + 33.0/7) + 1.0/8*sin(23*t + 11.0/7) + 5.0/9*sin(24*t + 11.0/7) + 1.0/4*sin(26*t + 17.0/11) + 1.0/5*sin(27*t + 11.0/7) + 3.0/13*sin(29*t + 11.0/7) + 1.0/11*sin(30*t + 11.0/7) + 1.0/6*sin(32*t + 19.0/12) + 1.0/10*sin(34*t + 14.0/9) - 1761.0/13)*theta(59*PI -t)*theta(t - 55*PI) + (-4.0/11*sin(17.0/11 - 45*t) - 5.0/9*sin(17.0/11 - 41*t) - 7.0/9*sin(3.0/2 - 39*t) - 14.0/13*sin(3.0/2 - 35*t) - 3.0/4*sin(20.0/13 - 33*t) - 17.0/12*sin(14.0/9 - 31*t) - 17.0/9*sin(11.0/7 - 29*t) - 15.0/8*sin(14.0/9 - 27*t) - 37.0/11*sin(14.0/9 - 22*t) - 11.0/2*sin(17.0/11 - 20*t) - 18.0/5*sin(11.0/7 - 17*t) - 5.0/8*sin(11.0/8 - 16*t) - 3.0/8*sin(14.0/11 - 12*t) - 11.0/5*sin(14.0/9 - 11*t) - 17.0/9*sin(17.0/11 - 9*t) - 5.0/6*sin(17.0/11 - 8*t) - 5.0/8*sin(14.0/9 - 5*t) - 19.0/6*sin(14.0/9 -t) + 11.0/12*sin(2*t + 8.0/5) + 7.0/9*sin(3*t + 11.0/7) + 8.0/11*sin(4*t + 8.0/5) + 1.0/5*sin(6*t + 11.0/7) + 3.0/7*sin(7*t + 47.0/10) + 7.0/6*sin(10*t + 8.0/5) + 2.0/5*sin(13*t + 23.0/5) + 1.0/4*sin(14*t + 68.0/15) + 41.0/15*sin(15*t + 8.0/5) + 114.0/13*sin(18*t + 8.0/5) + 25.0/8*sin(19*t + 13.0/8) + 38.0/13*sin(21*t + 14.0/9) + 37.0/15*sin(23*t + 13.0/8) + 1.0/8*sin(24*t + 21.0/11) + 14.0/15*sin(25*t + 13.0/8) + 11.0/8*sin(26*t + 8.0/5) + 24.0/11*sin(28*t + 19.0/12) + 7.0/4*sin(30*t + 11.0/7) + 16.0/13*sin(32*t + 8.0/5) + 7.0/9*sin(34*t + 13.0/8) + 6.0/5*sin(36*t + 13.0/8) + 3.0/8*sin(37*t + 61.0/13) + 4.0/13*sin(38*t + 11.0/7) + 3.0/8*sin(40*t + 14.0/9) + 5.0/7*sin(42*t + 13.0/8) + 2.0/11*sin(43*t + 32.0/7) + 3.0/4*sin(44*t + 13.0/8) + 5.0/13*sin(46*t + 23.0/14) - 833.0/6)*theta(55*PI -t)*theta(t - 51*PI) + (-1.0/6*sin(10.0/7 - 23*t) - 1.0/3*sin(18.0/13 - 22*t) - 1.0/3*sin(18.0/13 - 21*t) - 2.0/3*sin(7.0/5 - 20*t) - 26.0/27*sin(32.0/21 - 19*t) - 31.0/11*sin(17.0/11 - 11*t) - 17.0/4*sin(14.0/9 - 9*t) - 89.0/8*sin(17.0/11 - 7*t) - 230.0/27*sin(20.0/13 - 6*t) - 13.0/9*sin(11.0/7 - 4*t) - 46.0/31*sin(20.0/13 - 3*t) + 79.0/12*sin(t + 11.0/7) + 53.0/11*sin(2*t + 19.0/12) + 1.0/9*sin(5*t + 4.0/13) + 20.0/9*sin(8*t + 3.0/2) + 37.0/16*sin(10*t + 14.0/9) + 1.0/16*sin(12*t + 24.0/11) + 27.0/11*sin(13*t + 13.0/8) + 1.0/8*sin(14*t + 11.0/5) + 1.0/13*sin(15*t + 31.0/7) + 6.0/11*sin(16*t + 13.0/8) + 2.0/5*sin(17*t + 55.0/12) + 16.0/11*sin(18*t + 8.0/5) + 5.0/16*sin(24*t + 8.0/5) + 3.0/11*sin(25*t + 50.0/11) + 13.0/12*sin(26*t + 5.0/3) + 775.0/11)*theta(51*PI -t)*theta(t - 47*PI) + (-1.0/41*sin(10.0/19 - 44*t) - 3.0/13*sin(15.0/11 - 41*t) - 1.0/4*sin(3.0/2 - 38*t) - 3.0/5*sin(7.0/5 - 37*t) - 9.0/11*sin(13.0/9 - 36*t) - 1.0/4*sin(14.0/11 - 35*t) - 3.0/7*sin(19.0/14 - 34*t) - 23.0/17*sin(3.0/2 - 30*t) - 1.0/7*sin(6.0/7 - 29*t) - 3.0/5*sin(19.0/13 - 28*t) - 7.0/5*sin(13.0/9 - 27*t) - 31.0/10*sin(16.0/11 - 23*t) - 11.0/6*sin(19.0/13 - 22*t) - 10.0/3*sin(32.0/21 - 21*t) - 18.0/13*sin(7.0/5 - 20*t) - 45.0/17*sin(25.0/17 - 19*t) - 53.0/16*sin(14.0/9 - 18*t) - 40.0/7*sin(32.0/21 - 13*t) - 14.0/3*sin(3.0/2 - 12*t) - 39.0/11*sin(17.0/11 - 8*t) - 1.0/10*sin(3.0/2 - 7*t) + 31.0/8*sin(t + 19.0/12) + 38.0/11*sin(2*t + 19.0/12) + 23.0/6*sin(3*t + 11.0/7) + 14.0/15*sin(4*t + 27.0/16) + 46.0/13*sin(5*t + 11.0/7) + 7.0/8*sin(6*t + 20.0/13) + 23.0/10*sin(9*t + 8.0/5) + 45.0/8*sin(10*t + 23.0/14) + 7*sin(11*t + 13.0/8) + 67.0/10*sin(14*t + 18.0/11) + 187.0/12*sin(15*t + 13.0/8) + 16.0/3*sin(16*t + 47.0/10) + 166.0/15*sin(17*t + 8.0/5) + 13.0/25*sin(24*t + 7.0/4) + 10.0/7*sin(25*t + 12.0/7) + 12.0/13*sin(26*t + 13.0/8) + 2.0/11*sin(31*t + 9.0/5) + 10.0/9*sin(32*t + 12.0/7) + 1.0/10*sin(33*t + 15.0/8) + 1.0/6*sin(39*t + 65.0/33) + 1.0/30*sin(40*t + 7.0/8) + 1.0/3*sin(42*t + 7.0/4) + 1.0/2*sin(43*t + 19.0/11) + 507.0/7)*theta(47*PI -t)*theta(t - 43*PI) + (-16.0/13*sin(3.0/2 - 38*t) - 2.0/3*sin(10.0/7 - 34*t) - 1.0/6*sin(6.0/7 - 33*t) - 7.0/6*sin(16.0/11 - 32*t) - 7.0/10*sin(4.0/3 - 31*t) - 1.0/3*sin(9.0/7 - 30*t) - 19.0/14*sin(22.0/15 - 22*t) - 2.0/7*sin(15.0/11 - 21*t) - 8.0/9*sin(19.0/13 - 19*t) - 53.0/21*sin(29.0/19 - 17*t) - 3.0/5*sin(7.0/6 - 16*t) - 9.0/8*sin(10.0/7 - 15*t) - 169.0/7*sin(20.0/13 - 12*t) - 47.0/3*sin(3.0/2 - 11*t) - 45.0/7*sin(37.0/25 - 10*t) - 27.0/10*sin(26.0/17 - 9*t) - 59.0/11*sin(17.0/11 - 8*t) - 5.0/3*sin(17.0/11 - 3*t) + 25.0/7*sin(t + 19.0/12) + 27.0/16*sin(2*t + 19.0/12) + 11.0/6*sin(4*t + 21.0/13) + 83.0/11*sin(5*t + 19.0/12) + 3.0/7*sin(6*t + 9.0/5) + 38.0/7*sin(7*t + 11.0/7) + 149.0/9*sin(13*t + 8.0/5) + 10.0/11*sin(14*t + 53.0/12) + 7.0/10*sin(18*t + 17.0/11) + 3.0/5*sin(20*t + 12.0/7) + 1.0/38*sin(23*t + 1.0/7) + 6.0/17*sin(24*t + 23.0/5) + 17.0/10*sin(25*t + 8.0/5) + 11.0/17*sin(26*t + 75.0/16) + 13.0/25*sin(27*t + 13.0/8) + 5.0/14*sin(28*t + 28.0/17) + 1.0/20*sin(29*t + 23.0/6) + 1.0/7*sin(35*t + 25.0/13) + 17.0/13*sin(36*t + 7.0/4) + 12.0/11*sin(37*t + 27.0/16) + 751.0/14)*theta(43*PI -t)*theta(t - 39*PI) + (-3.0/8*sin(11.0/8 - 75*t) - 5.0/9*sin(17.0/11 - 70*t) - 17.0/10*sin(13.0/9 - 68*t) - 19.0/12*sin(23.0/17 - 65*t) - 6.0/7*sin(4.0/3 - 64*t) - 10.0/11*sin(7.0/5 - 60*t) - 11.0/15*sin(28.0/19 - 59*t) - 7.0/6*sin(20.0/13 - 58*t) - 11.0/17*sin(14.0/9 - 57*t) - 1.0/2*sin(19.0/13 - 55*t) - 8.0/11*sin(20.0/13 - 54*t) - 4.0/15*sin(26.0/17 - 53*t) - 68.0/69*sin(25.0/17 - 52*t) - 3.0/8*sin(16.0/11 - 46*t) - 11.0/16*sin(19.0/13 - 43*t) - 2.0/5*sin(32.0/21 - 39*t) - 1.0/12*sin(31.0/21 - 38*t) - 2.0/9*sin(11.0/8 - 36*t) - 1.0/19*sin(14.0/11 - 35*t) - 1.0/13*sin(6.0/5 - 34*t) - 20.0/11*sin(14.0/9 - 28*t) - 9.0/5*sin(11.0/7 - 26*t) - 53.0/18*sin(7.0/5 - 24*t) - 217.0/18*sin(20.0/13 - 21*t) - 43.0/3*sin(23.0/15 - 20*t) - 9*sin(11.0/7 - 19*t) - 21.0/10*sin(28.0/19 - 16*t) - 14.0/9*sin(3.0/2 - 15*t) - 33.0/17*sin(37.0/25 - 14*t) - 5.0/13*sin(10.0/7 - 13*t) - 2.0/3*sin(19.0/13 - 12*t) - 7.0/8*sin(26.0/17 - 7*t) -sin(23.0/15 - 5*t) - 17.0/7*sin(11.0/7 - 2*t) + 326.0/11*sin(t + 11.0/7) + 15.0/8*sin(3*t + 11.0/7) + 14.0/11*sin(4*t + 47.0/10) + 29.0/19*sin(6*t + 47.0/10) + 3.0/13*sin(8*t + 31.0/7) + 10.0/3*sin(9*t + 11.0/7) + 6.0/7*sin(10*t + 11.0/7) + 22.0/13*sin(11*t + 38.0/25) + 23.0/9*sin(17*t + 14.0/3) + 60.0/11*sin(18*t + 61.0/13) + 34.0/3*sin(22*t + 18.0/11) + 20.0/9*sin(23*t + 13.0/8) + 31.0/13*sin(25*t + 17.0/11) + 23.0/14*sin(27*t + 13.0/8) + 3.0/8*sin(29*t + 13.0/8) + 31.0/32*sin(30*t + 75.0/16) + 1.0/3*sin(31*t + 38.0/25) + 1.0/12*sin(32*t + 113.0/28) + 5.0/8*sin(33*t + 20.0/13) + 8.0/15*sin(37*t + 33.0/7) + 1.0/6*sin(40*t + 19.0/14) + 4.0/13*sin(41*t + 33.0/7) + 9.0/13*sin(42*t + 21.0/13) + 1.0/5*sin(44*t + 7.0/4) + 1.0/9*sin(45*t + 11.0/6) + 1.0/3*sin(47*t + 11.0/7) + 1.0/30*sin(48*t + 35.0/23) + 8.0/11*sin(49*t + 18.0/11) + 1.0/11*sin(50*t + 32.0/7) + 1.0/16*sin(51*t + 1.0/10) + 2.0/5*sin(56*t + 14.0/3) + 2.0/3*sin(61*t + 23.0/15) + 4.0/5*sin(62*t + 23.0/13) + 15.0/8*sin(63*t + 22.0/13) + 3.0/7*sin(66*t + 15.0/7) + 23.0/22*sin(67*t + 7.0/4) +sin(69*t + 11.0/7) + 5.0/8*sin(71*t + 18.0/11) + 1.0/6*sin(72*t + 19.0/11) + 1.0/4*sin(73*t + 20.0/13) + 1.0/27*sin(74*t + 29.0/7) - 109.0/12)*theta(39*PI -t)*theta(t - 35*PI) + (-1.0/90*sin(12.0/11 - 46*t) - 8.0/7*sin(20.0/13 - 36*t) - 7.0/9*sin(3.0/2 - 19*t) - 1.0/8*sin(3.0/2 - 10*t) + 167.0/9*sin(t + 11.0/7) + 2.0/7*sin(2*t + 33.0/7) + 11.0/7*sin(3*t + 11.0/7) + 6.0/17*sin(4*t + 14.0/3) + 4.0/7*sin(5*t + 14.0/3) + 8.0/11*sin(6*t + 75.0/16) + 4.0/7*sin(7*t + 47.0/10) + 9.0/7*sin(8*t + 11.0/7) + 7.0/5*sin(9*t + 47.0/10) + 11.0/8*sin(11*t + 17.0/11) + 3.0/2*sin(12*t + 47.0/10) + 5.0/6*sin(13*t + 47.0/10) + 6.0/5*sin(14*t + 14.0/3) + 23.0/8*sin(15*t + 33.0/7) + 45.0/22*sin(16*t + 11.0/7) + 39.0/11*sin(17*t + 33.0/7) + 5.0/2*sin(18*t + 14.0/3) + 27.0/8*sin(20*t + 11.0/7) + 8.0/3*sin(21*t + 47.0/10) + 1.0/3*sin(22*t + 35.0/8) + 23.0/22*sin(23*t + 14.0/3) + 1.0/17*sin(24*t + 7.0/2) + 19.0/15*sin(25*t + 20.0/13) + 7.0/12*sin(26*t + 14.0/9) + 8.0/11*sin(27*t + 32.0/21) + 1.0/11*sin(28*t + 35.0/8) + 20.0/11*sin(29*t + 14.0/3) + 5.0/13*sin(30*t + 51.0/11) + 15.0/7*sin(31*t + 89.0/19) + 10.0/11*sin(32*t + 47.0/10) + 8.0/9*sin(33*t + 60.0/13) + 17.0/7*sin(34*t + 47.0/10) + 7.0/10*sin(35*t + 8.0/5) + 4.0/11*sin(37*t + 23.0/13) + 3.0/2*sin(38*t + 47.0/10) + 28.0/29*sin(39*t + 8.0/5) + 11.0/15*sin(40*t + 13.0/9) + 5.0/8*sin(41*t + 19.0/12) + 6.0/11*sin(42*t + 65.0/14) + 7.0/13*sin(43*t + 23.0/5) + 6.0/13*sin(44*t + 20.0/13) + 1.0/9*sin(45*t + 14.0/3) + 1.0/3*sin(47*t + 14.0/9) + 5.0/9*sin(48*t + 14.0/3) - 655.0/9)*theta(35*PI -t)*theta(t - 31*PI) + (-2.0/11*sin(7.0/5 - 33*t) - 1.0/8*sin(7.0/6 - 29*t) - 25.0/9*sin(14.0/9 - 23*t) - 11.0/21*sin(3.0/2 - 8*t) - 4.0/15*sin(3.0/2 - 2*t) + 97.0/7*sin(t + 11.0/7) + 2.0/3*sin(3*t + 17.0/11) + 17.0/10*sin(4*t + 11.0/7) + 29.0/15*sin(5*t + 47.0/10) + 5.0/12*sin(6*t + 75.0/16) + 5.0/6*sin(7*t + 14.0/3) + 8.0/9*sin(9*t + 14.0/3) + 6.0/5*sin(10*t + 14.0/3) + 10.0/7*sin(11*t + 14.0/3) + 41.0/11*sin(12*t + 14.0/3) + 85.0/11*sin(13*t + 61.0/13) + 31.0/5*sin(14*t + 14.0/3) + 24.0/13*sin(15*t + 14.0/3) + 49.0/8*sin(16*t + 20.0/13) + 160.0/53*sin(17*t + 11.0/7) + 33.0/5*sin(18*t + 47.0/10) + 36.0/11*sin(19*t + 11.0/7) + 2.0/11*sin(20*t + 11.0/9) + 20.0/9*sin(21*t + 61.0/13) + 20.0/9*sin(22*t + 19.0/12) + 33.0/32*sin(24*t + 22.0/13) + 43.0/14*sin(25*t + 47.0/10) + 3.0/8*sin(26*t + 29.0/15) + 9.0/4*sin(27*t + 47.0/10) + 5.0/6*sin(28*t + 18.0/11) + 7.0/4*sin(30*t + 23.0/15) + 1.0/5*sin(31*t + 47.0/10) + 10.0/19*sin(32*t + 41.0/9) + 9.0/10*sin(34*t + 20.0/13) + 7.0/11*sin(35*t + 14.0/3) + 3.0/11*sin(36*t + 55.0/12) + 1.0/8*sin(37*t + 4.0/3) + 1.0/13*sin(38*t + 60.0/13) + 1.0/4*sin(39*t + 37.0/8) + 1.0/3*sin(40*t + 26.0/17) - 465.0/4)*theta(31*PI -t)*theta(t - 27*PI) + (-1.0/20*sin(38.0/25 - 31*t) - 1.0/8*sin(14.0/9 - 28*t) - 1.0/22*sin(28.0/19 - 25*t) - 1.0/9*sin(17.0/12 - 24*t) - 1.0/8*sin(17.0/12 - 19*t) - 1.0/15*sin(17.0/11 - 13*t) - 1.0/21*sin(23.0/15 - 12*t) - 8.0/15*sin(3.0/2 - 7*t) - 1.0/10*sin(18.0/17 - 6*t) - 13.0/14*sin(38.0/25 -t) + 9.0/7*sin(2*t + 18.0/11) + 434.0/13*sin(3*t + 11.0/7) + 9.0/7*sin(4*t + 37.0/8) + 1.0/6*sin(5*t + 9.0/7) + 1.0/7*sin(8*t + 49.0/11) + 48.0/13*sin(9*t + 19.0/12) + 4.0/9*sin(10*t + 47.0/10) + 1.0/17*sin(11*t + 4.0/3) + 1.0/12*sin(14*t + 19.0/9) + 20.0/19*sin(15*t + 21.0/13) + 2.0/7*sin(16*t + 14.0/3) + 1.0/7*sin(17*t + 23.0/15) + 1.0/13*sin(18*t + 14.0/9) + 1.0/14*sin(20*t + 33.0/7) + 3.0/5*sin(21*t + 13.0/8) + 1.0/8*sin(22*t + 65.0/14) + 1.0/13*sin(23*t + 4.0/3) + 1.0/11*sin(26*t + 11.0/6) + 1.0/3*sin(27*t + 28.0/17) + 1.0/69*sin(29*t + 14.0/9) + 1.0/27*sin(30*t + 17.0/11) + 1.0/28*sin(32*t + 23.0/12) + 3.0/13*sin(33*t + 5.0/3) + 1.0/17*sin(34*t + 23.0/5) + 1.0/13*sin(35*t + 17.0/11) - 896.0/23)*theta(27*PI -t)*theta(t - 23*PI) + (-13.0/8*sin(14.0/9 - 6*t) - 21.0/5*sin(14.0/9 - 5*t) - 79.0/20*sin(14.0/9 - 4*t) - 213.0/11*sin(11.0/7 -t) + 353.0/32*sin(2*t + 11.0/7) + 1.0/5*sin(3*t + 14.0/3) - 128.0/7)*theta(23*PI -t)*theta(t - 19*PI) + (-1.0/28*sin(29.0/19 - 34*t) - 9.0/5*sin(11.0/7 - 6*t) + 147.0/10*sin(t + 11.0/7) + 124.0/11*sin(2*t + 11.0/7) + 7.0/2*sin(3*t + 11.0/7) + 3.0/11*sin(4*t + 20.0/13) + 19.0/7*sin(5*t + 11.0/7) + 13.0/12*sin(7*t + 33.0/7) + 30.0/31*sin(8*t + 33.0/7) + 7.0/5*sin(9*t + 11.0/7) + 3.0/11*sin(10*t + 19.0/12) + 3.0/7*sin(11*t + 47.0/10) + 13.0/8*sin(12*t + 33.0/7) + 1.0/60*sin(13*t + 13.0/5) + 1.0/67*sin(14*t + 11.0/3) + 1.0/7*sin(15*t + 5.0/3) + 7.0/9*sin(16*t + 47.0/10) + 5.0/8*sin(17*t + 61.0/13) + 6.0/13*sin(18*t + 89.0/19) + 1.0/15*sin(19*t + 9.0/5) + 1.0/38*sin(20*t + 49.0/12) + 1.0/8*sin(21*t + 55.0/12) + 4.0/13*sin(22*t + 14.0/3) + 3.0/11*sin(23*t + 14.0/3) + 1.0/9*sin(24*t + 51.0/11) + 1.0/13*sin(25*t + 12.0/7) + 1.0/15*sin(26*t + 41.0/9) + 1.0/9*sin(27*t + 37.0/8) + 1.0/8*sin(28*t + 75.0/16) + 1.0/56*sin(29*t + 17.0/9) + 1.0/22*sin(30*t + 23.0/5) + 1.0/27*sin(31*t + 41.0/9) + 1.0/16*sin(32*t + 47.0/10) + 1.0/23*sin(33*t + 19.0/12) + 1.0/45*sin(35*t + 89.0/19) + 1.0/12*sin(36*t + 33.0/7) + 1.0/15*sin(37*t + 8.0/5) + 1.0/56*sin(38*t + 8.0/5) + 1.0/90*sin(39*t + 14.0/3) - 799.0/12)*theta(19*PI -t)*theta(t - 15*PI) + (-6.0/19*sin(9.0/11 - 6*t) - 3.0/4*sin(1.0/14 - 4*t) + 100.0/9*sin(t + 85.0/43) + 140.0/13*sin(2*t + 51.0/13) + 73.0/24*sin(3*t + 5.0/2) + 10.0/7*sin(5*t + 6.0/13) + 4.0/5*sin(7*t + 7.0/4) + 1.0/8*sin(8*t + 18.0/7) + 2.0/13*sin(9*t + 32.0/13) + 2.0/9*sin(10*t + 47.0/11) - 20.0/3)*theta(15*PI -t)*theta(t - 11*PI) + (-1.0/6*sin(16.0/13 - 7*t) + 149.0/12*sin(t + 5.0/3) + 231.0/23*sin(2*t + 30.0/7) + 38.0/9*sin(3*t + 49.0/13) + 10.0/9*sin(4*t + 39.0/11) + 1.0/22*sin(5*t + 1.0/15) + 5.0/7*sin(6*t + 23.0/24) + 5.0/9*sin(8*t + 113.0/56) - 875.0/9)*theta(11*PI -t)*theta(t - 7*PI) + (279.0/10*sin(t + 11.0/6) + 1.0/10*sin(2*t + 22.0/5) + 15.0/8*sin(3*t + 35.0/13) + 5.0/8*sin(4*t + 7.0/3) + 1.0/4*sin(5*t + 14.0/3) + 2.0/7*sin(6*t + 53.0/15) - 62.0/5)*theta(7*PI -t)*theta(t - 3*PI) + (-228.0/11*sin(14.0/9 -t) + 33.0/7*sin(2*t + 11.0/6) + 7.0/13*sin(3*t + 21.0/5) + 14.0/13*sin(4*t + 13.0/7) + 4.0/5*sin(5*t + 25.0/6) + 3.0/11*sin(6*t + 11.0/8) - 859.0/8)*theta(3*PI -t)*theta(t +PI))*theta(sqrt(sgn(sin(t/2))));
}

float y(float t)
{
  return ((-1.0/73*sin(34.0/23 - 25*t) - 1.0/35*sin(17.0/11 - 23*t) - 1.0/50*sin(16.0/11 - 22*t) - 1.0/21*sin(37.0/25 - 21*t) - 1.0/25*sin(22.0/15 - 20*t) - 1.0/12*sin(35.0/23 - 19*t) - 1.0/15*sin(25.0/17 - 18*t) - 1.0/9*sin(3.0/2 - 17*t) - 1.0/10*sin(3.0/2 - 16*t) - 1.0/7*sin(26.0/17 - 15*t) - 1.0/9*sin(3.0/2 - 14*t) - 1.0/6*sin(26.0/17 - 13*t) - 1.0/7*sin(35.0/23 - 12*t) - 2.0/9*sin(20.0/13 - 11*t) - 1.0/7*sin(32.0/21 - 10*t) - 2.0/7*sin(17.0/11 - 9*t) - 2.0/9*sin(20.0/13 - 8*t) - 1.0/3*sin(14.0/9 - 7*t) - 1.0/23*sin(13.0/9 - 6*t) - 2.0/5*sin(14.0/9 - 5*t) - 1.0/7*sin(14.0/9 - 4*t) - 40.0/39*sin(11.0/7 - 3*t) - 1.0/31*sin(1 - 2*t) - 123.0/14*sin(11.0/7 -t) - 2000.0/9)*theta(91*PI -t)*theta(t - 87*PI) + (-1.0/14*sin(25.0/17 - 51*t) - 2.0/9*sin(7.0/5 - 48*t) - 6.0/17*sin(7.0/5 - 47*t) - 2.0/9*sin(14.0/9 - 45*t) - 5.0/13*sin(31.0/21 - 39*t) - 4.0/9*sin(19.0/14 - 38*t) - 12.0/25*sin(19.0/13 - 31*t) - 1.0/24*sin(19.0/20 - 30*t) - 10.0/19*sin(7.0/5 - 29*t) - 2.0/5*sin(13.0/10 - 28*t) - 21.0/22*sin(10.0/7 - 22*t) - 20.0/11*sin(29.0/19 - 21*t) - 7.0/4*sin(17.0/11 - 19*t) - 8.0/13*sin(13.0/9 - 18*t) - 25.0/24*sin(38.0/25 - 15*t) - 3.0/7*sin(16.0/13 - 14*t) - 42.0/11*sin(23.0/15 - 13*t) - 20.0/7*sin(3.0/2 - 12*t) - 1.0/8*sin(1 - 11*t) - 7.0/6*sin(38.0/25 - 10*t) - 49.0/6*sin(20.0/13 - 9*t) - 677.0/16*sin(14.0/9 - 5*t) - 136.0/5*sin(14.0/9 - 4*t) + 16*sin(t + 11.0/7) + 47.0/7*sin(2*t + 47.0/10) + 45.0/8*sin(3*t + 14.0/9) + 87.0/7*sin(6*t + 11.0/7) + 59.0/11*sin(7*t + 75.0/16) + 47.0/7*sin(8*t + 11.0/7) + 9.0/7*sin(16*t + 18.0/11) + 8.0/5*sin(17*t + 13.0/8) + 8.0/5*sin(20*t + 11.0/7) + 1.0/2*sin(23*t + 20.0/13) + 2.0/9*sin(24*t + 37.0/8) + 5.0/12*sin(25*t + 75.0/16) + 8.0/7*sin(26*t + 8.0/5) + 1.0/2*sin(27*t + 14.0/3) + 1.0/4*sin(32*t + 13.0/9) + 1.0/9*sin(33*t + 57.0/13) + 4.0/13*sin(34*t + 28.0/17) + 1.0/17*sin(35*t + 15.0/8) + 1.0/10*sin(36*t + 95.0/21) + 1.0/9*sin(37*t + 13.0/10) + 4.0/7*sin(40*t + 13.0/8) + 1.0/8*sin(41*t + 35.0/8) + 1.0/6*sin(42*t + 7.0/4) + 1.0/8*sin(43*t + 27.0/16) + 1.0/10*sin(44*t + 17.0/10) + 1.0/4*sin(46*t + 20.0/13) + 4.0/11*sin(49*t + 12.0/7) + 1.0/5*sin(50*t + 43.0/22) - 2480.0/7)*theta(87*PI -t)*theta(t - 83*PI) + (-5.0/13*sin(17.0/11 - 31*t) - 201.0/11*sin(11.0/7 -t) + 1325.0/39*sin(2*t + 33.0/7) + 445.0/9*sin(3*t + 11.0/7) + 251.0/3*sin(4*t + 11.0/7) + 90.0/13*sin(5*t + 8.0/5) + 20.0/7*sin(6*t + 8.0/5) + 29.0/3*sin(7*t + 11.0/7) + 7.0/5*sin(8*t + 5.0/3) + 109.0/8*sin(9*t + 33.0/7) + 155.0/12*sin(10*t + 11.0/7) + 57.0/8*sin(11*t + 47.0/10) + 64.0/5*sin(12*t + 11.0/7) + 11.0/3*sin(13*t + 47.0/10) + 99.0/25*sin(14*t + 11.0/7) + 11.0/4*sin(15*t + 11.0/7) + 21.0/5*sin(16*t + 61.0/13) + 17.0/4*sin(17*t + 11.0/7) + 1.0/6*sin(18*t + 23.0/15) + 9.0/10*sin(19*t + 75.0/16) + 8.0/7*sin(20*t + 17.0/11) + 1.0/8*sin(21*t + 25.0/13) + 9.0/4*sin(22*t + 8.0/5) + 4.0/5*sin(23*t + 79.0/17) + 1.0/5*sin(24*t + 19.0/11) + 9.0/10*sin(25*t + 11.0/7) + 13.0/11*sin(26*t + 19.0/12) + 7.0/9*sin(27*t + 47.0/10) + 28.0/29*sin(28*t + 11.0/7) + 2.0/3*sin(29*t + 33.0/7) + 1.0/19*sin(30*t + 19.0/10) + 5.0/4*sin(32*t + 19.0/12) + 1.0/8*sin(33*t + 20.0/11) + 11.0/17*sin(34*t + 11.0/7) + 2.0/5*sin(35*t + 37.0/8) + 2.0/3*sin(36*t + 8.0/5) + 1.0/5*sin(37*t + 5.0/3) + 8.0/7*sin(38*t + 47.0/10) + 11.0/21*sin(39*t + 8.0/5) + 1.0/19*sin(40*t + 24.0/7) + 3.0/5*sin(41*t + 8.0/5) + 4.0/7*sin(42*t + 11.0/7) + 3.0/7*sin(43*t + 79.0/17) - 2602.0/9)*theta(83*PI -t)*theta(t - 79*PI) + (-46.0/11*sin(11.0/7 - 3*t) - 179.0/4*sin(11.0/7 -t) + 61.0/12*sin(2*t + 11.0/7) + 11.0/12*sin(4*t + 11.0/7) - 6159.0/35)*theta(79*PI -t)*theta(t - 75*PI) + (-3.0/5*sin(14.0/9 - 34*t) - 1.0/25*sin(19.0/13 - 32*t) - 2.0/7*sin(17.0/11 - 30*t) - 13.0/8*sin(11.0/7 - 28*t) -sin(11.0/7 - 26*t) - 5.0/6*sin(14.0/9 - 25*t) - 19.0/10*sin(11.0/7 - 23*t) - 65.0/4*sin(11.0/7 - 2*t) - 87*sin(11.0/7 -t) + 141.0/13*sin(3*t + 11.0/7) + 18*sin(4*t + 11.0/7) + 35.0/8*sin(5*t + 14.0/9) + 51.0/11*sin(6*t + 14.0/9) + 158.0/15*sin(7*t + 11.0/7) + 63.0/11*sin(8*t + 11.0/7) + 7.0/6*sin(9*t + 33.0/7) + 25.0/14*sin(10*t + 14.0/9) + 30.0/11*sin(11*t + 11.0/7) + 19.0/8*sin(12*t + 47.0/10) + 6.0/5*sin(13*t + 33.0/7) + 25.0/11*sin(14*t + 14.0/9) + 13.0/10*sin(15*t + 33.0/7) + 6.0/11*sin(16*t + 65.0/14) + 59.0/29*sin(17*t + 14.0/9) + 5.0/16*sin(18*t + 22.0/15) + 2.0/7*sin(19*t + 17.0/10) + 7.0/10*sin(20*t + 8.0/5) + 5.0/9*sin(21*t + 3.0/2) + 21.0/20*sin(22*t + 11.0/7) + 15.0/7*sin(24*t + 11.0/7) + 11.0/6*sin(27*t + 11.0/7) + 11.0/8*sin(29*t + 11.0/7) + 4.0/7*sin(31*t + 11.0/7) + 7.0/10*sin(33*t + 11.0/7) + 7.0/12*sin(35*t + 19.0/12) - 1427.0/9)*theta(75*PI -t)*theta(t - 71*PI) + (-2.0/7*sin(17.0/11 - 20*t) - 1.0/9*sin(13.0/10 - 18*t) + 6.0/13*sin(t + 17.0/13) + 43.0/3*sin(2*t + 11.0/7) + 379.0/20*sin(3*t + 33.0/7) + 225.0/11*sin(4*t + 11.0/7) + 64.0/5*sin(5*t + 14.0/9) + 81.0/13*sin(6*t + 33.0/7) + 23.0/7*sin(7*t + 65.0/14) + 98.0/13*sin(8*t + 47.0/10) +sin(9*t + 11.0/7) + 11.0/12*sin(10*t + 33.0/7) + 1.0/10*sin(11*t + 25.0/11) + 40.0/11*sin(12*t + 47.0/10) + 1.0/6*sin(13*t + 25.0/12) + 19.0/7*sin(14*t + 47.0/10) + 4.0/13*sin(15*t + 32.0/7) + 7.0/8*sin(16*t + 79.0/17) + 4.0/5*sin(17*t + 14.0/3) + 8.0/5*sin(19*t + 20.0/13) + 5.0/6*sin(21*t + 14.0/3) + 2.0/7*sin(22*t + 76.0/17) + 25.0/24*sin(23*t + 14.0/3) + 8.0/11*sin(24*t + 79.0/17) - 112.0/3)*theta(71*PI -t)*theta(t - 67*PI) + (-1.0/11*sin(14.0/9 - 13*t) - 3.0/10*sin(11.0/7 - 9*t) + 313.0/24*sin(t + 11.0/7) + 128.0/5*sin(2*t + 11.0/7) + 1.0/10*sin(3*t + 21.0/5) + 65.0/16*sin(4*t + 11.0/7) + 4.0/11*sin(5*t + 23.0/14) + 8.0/9*sin(6*t + 8.0/5) + 2.0/3*sin(7*t + 19.0/12) + 5.0/4*sin(8*t + 8.0/5) + 7.0/11*sin(10*t + 11.0/7) + 5.0/13*sin(11*t + 23.0/14) + 5.0/13*sin(12*t + 19.0/12) + 1.0/2*sin(14*t + 13.0/8) + 2.0/11*sin(15*t + 13.0/8) + 1.0/10*sin(16*t + 14.0/9) + 1.0/21*sin(17*t + 32.0/7) + 1.0/4*sin(18*t + 19.0/12) + 1.0/14*sin(19*t + 12.0/7) + 1.0/7*sin(20*t + 13.0/8) + 1.0/8*sin(22*t + 5.0/3) + 1.0/94*sin(23*t + 27.0/13) + 1.0/11*sin(24*t + 14.0/9) + 1.0/13*sin(26*t + 20.0/13) + 1.0/9*sin(28*t + 5.0/3) - 1923.0/11)*theta(67*PI -t)*theta(t - 63*PI) + (-1.0/15*sin(10.0/7 - 38*t) - 1.0/10*sin(7.0/5 - 36*t) - 1.0/4*sin(10.0/7 - 34*t) - 6.0/19*sin(11.0/8 - 31*t) - 1.0/7*sin(10.0/7 - 28*t) - 1.0/3*sin(10.0/7 - 25*t) - 1.0/8*sin(17.0/14 - 23*t) - 1.0/7*sin(11.0/7 - 20*t) - 1.0/8*sin(3.0/2 - 18*t) - 13.0/14*sin(3.0/2 - 16*t) - 3.0/8*sin(14.0/9 - 14*t) - 2.0/13*sin(19.0/15 - 13*t) - 25.0/8*sin(20.0/13 - 10*t) - 53.0/16*sin(17.0/11 - 8*t) - 33.0/8*sin(17.0/11 - 5*t) - 741.0/10*sin(11.0/7 -t) + 117.0/16*sin(2*t + 11.0/7) + 144.0/7*sin(3*t + 11.0/7) + 285.0/22*sin(4*t + 11.0/7) + 42.0/5*sin(6*t + 19.0/12) + 57.0/28*sin(7*t + 17.0/11) + 15.0/2*sin(9*t + 19.0/12) + 33.0/13*sin(11*t + 11.0/7) + 10.0/21*sin(12*t + 8.0/5) + 17.0/9*sin(15*t + 19.0/12) + 23.0/14*sin(17*t + 19.0/12) + 6.0/19*sin(19*t + 17.0/11) + 3.0/13*sin(21*t + 14.0/9) + 2.0/9*sin(22*t + 13.0/8) + 10.0/13*sin(24*t + 13.0/8) + 1.0/47*sin(26*t + 15.0/7) + 3.0/11*sin(27*t + 8.0/5) + 1.0/7*sin(29*t + 16.0/11) + 4.0/9*sin(30*t + 5.0/3) + 1.0/5*sin(32*t + 17.0/10) + 1.0/7*sin(33*t + 8.0/5) + 2.0/5*sin(35*t + 13.0/8) + 1.0/6*sin(37*t + 11.0/7) + 1.0/6*sin(39*t + 5.0/3) - 1809.0/13)*theta(63*PI -t)*theta(t - 59*PI) + (-6.0/17*sin(11.0/7 - 34*t) - 3.0/14*sin(3.0/2 - 32*t) - 3.0/13*sin(17.0/11 - 29*t) - 14.0/11*sin(14.0/9 - 24*t) - 5.0/9*sin(17.0/11 - 22*t) - 7.0/12*sin(17.0/11 - 20*t) - 67.0/11*sin(14.0/9 - 13*t) - 13.0/9*sin(26.0/17 - 11*t) - 77.0/12*sin(11.0/7 - 6*t) + 201.0/11*sin(t + 33.0/7) + 42.0/17*sin(2*t + 11.0/7) + 10.0/7*sin(3*t + 47.0/10) + 22.0/7*sin(4*t + 11.0/7) + 23.0/8*sin(5*t + 33.0/7) + 81.0/23*sin(7*t + 61.0/13) + 53.0/8*sin(8*t + 33.0/7) + 31.0/3*sin(9*t + 47.0/10) + 72.0/7*sin(10*t + 33.0/7) + 53.0/4*sin(12*t + 11.0/7) + 3.0/2*sin(14*t + 21.0/13) + 5.0/9*sin(15*t + 61.0/13) + 4.0/5*sin(16*t + 51.0/11) + 1.0/17*sin(17*t + 22.0/13) + 9.0/7*sin(18*t + 14.0/9) + 2.0/3*sin(19*t + 14.0/3) + 2.0/11*sin(21*t + 47.0/10) + 1.0/3*sin(23*t + 27.0/16) + 11.0/10*sin(25*t + 14.0/3) + 4.0/7*sin(26*t + 14.0/3) + 6.0/13*sin(27*t + 65.0/14) + 4.0/9*sin(28*t + 11.0/7) + 9.0/17*sin(30*t + 14.0/9) + 11.0/13*sin(31*t + 11.0/7) + 11.0/16*sin(33*t + 14.0/3) - 448.0/13)*theta(59*PI -t)*theta(t - 55*PI) + (-6.0/19*sin(3.0/2 - 46*t) - 12.0/11*sin(10.0/7 - 45*t) - 4.0/5*sin(10.0/7 - 44*t) - 1.0/9*sin(29.0/19 - 42*t) - 1.0/12*sin(6.0/7 - 38*t) - 3.0/4*sin(3.0/2 - 37*t) - 43.0/14*sin(23.0/15 - 22*t) - 62.0/13*sin(17.0/11 - 20*t) - 17.0/8*sin(11.0/7 - 13*t) - 41.0/13*sin(3.0/2 - 12*t) - 25.0/6*sin(14.0/9 - 11*t) - 31.0/8*sin(17.0/11 - 9*t) - 42.0/13*sin(14.0/9 - 8*t) - 1.0/21*sin(5.0/4 - 6*t) - 33.0/16*sin(14.0/9 - 5*t) - 80.0/13*sin(11.0/7 - 2*t) - 201.0/5*sin(11.0/7 -t) + 39.0/8*sin(3*t + 33.0/7) +sin(4*t + 47.0/10) + 13.0/10*sin(7*t + 33.0/7) + 22.0/15*sin(10*t + 33.0/7) + 2.0/3*sin(14*t + 16.0/9) + 43.0/9*sin(15*t + 8.0/5) + 3.0/10*sin(16*t + 9.0/7) + 4.0/7*sin(17*t + 9.0/5) + 163.0/10*sin(18*t + 13.0/8) + 69.0/7*sin(19*t + 13.0/8) + 4.0/13*sin(21*t + 11.0/15) + 11.0/10*sin(23*t + 5.0/3) + 11.0/6*sin(24*t + 23.0/14) + 10.0/7*sin(25*t + 8.0/5) + 11.0/10*sin(26*t + 8.0/5) + 1.0/2*sin(27*t + 75.0/16) + 5.0/4*sin(28*t + 8.0/5) + 2.0/7*sin(29*t + 79.0/17) + 7.0/9*sin(30*t + 13.0/8) + 2.0/7*sin(31*t + 11.0/6) + 19.0/14*sin(32*t + 13.0/8) + 1.0/3*sin(33*t + 21.0/13) + 5.0/12*sin(34*t + 12.0/7) + 6.0/7*sin(35*t + 28.0/17) + 7.0/9*sin(36*t + 5.0/3) + 1.0/24*sin(39*t + 13.0/6) + 13.0/25*sin(40*t + 17.0/10) + 4.0/9*sin(41*t + 23.0/14) + 1.0/18*sin(43*t + 32.0/21) + 641.0/13)*theta(55*PI -t)*theta(t - 51*PI) + (-5.0/11*sin(20.0/13 - 25*t) - 7.0/11*sin(13.0/9 - 24*t) - 27.0/10*sin(3.0/2 - 15*t) - 57.0/5*sin(17.0/11 - 8*t) - 23.0/4*sin(11.0/7 - 5*t) - 59.0/5*sin(11.0/7 -t) + 41.0/14*sin(2*t + 11.0/7) + 41.0/6*sin(3*t + 8.0/5) + 80.0/27*sin(4*t + 11.0/7) + 51.0/14*sin(6*t + 8.0/5) + 34.0/9*sin(7*t + 11.0/7) + 13.0/4*sin(9*t + 11.0/7) + 1.0/5*sin(10*t + 18.0/7) + 9.0/5*sin(11*t + 13.0/8) + 71.0/24*sin(12*t + 5.0/3) + 74.0/11*sin(13*t + 18.0/11) + 4.0/7*sin(14*t + 14.0/3) + 1.0/12*sin(16*t + 8.0/9) + 11.0/21*sin(17*t + 13.0/7) + 49.0/12*sin(18*t + 18.0/11) + 5.0/9*sin(19*t + 19.0/10) + 2.0/13*sin(20*t + 61.0/31) + 1.0/7*sin(21*t + 47.0/24) + 11.0/7*sin(22*t + 12.0/7) + 7.0/9*sin(23*t + 5.0/3) + 2.0/3*sin(26*t + 13.0/8) + 93.0/10)*theta(51*PI -t)*theta(t - 47*PI) + (-4.0/9*sin(10.0/7 - 41*t) - 36.0/35*sin(11.0/8 - 40*t) - 13.0/10*sin(13.0/9 - 39*t) - 13.0/8*sin(19.0/13 - 37*t) - 20.0/7*sin(7.0/5 - 36*t) - 11.0/3*sin(10.0/7 - 35*t) - 27.0/20*sin(18.0/13 - 34*t) - 14.0/11*sin(10.0/7 - 30*t) - 45.0/46*sin(23.0/15 - 27*t) - 5.0/4*sin(10.0/7 - 23*t) - 9.0/11*sin(17.0/12 - 22*t) - 137.0/25*sin(17.0/11 - 17*t) - 93.0/10*sin(26.0/17 - 15*t) - 45.0/11*sin(3.0/2 - 14*t) - 43.0/9*sin(20.0/13 - 11*t) - 67.0/15*sin(3.0/2 - 10*t) - 17.0/13*sin(14.0/9 - 9*t) - 1.0/7*sin(10.0/11 - 4*t) - 34.0/7*sin(11.0/7 - 3*t) - 47.0/14*sin(14.0/9 - 2*t) - 76.0/3*sin(11.0/7 -t) + 9.0/4*sin(5*t + 33.0/7) + 1.0/15*sin(6*t + 8.0/3) + 1.0/7*sin(7*t + 15.0/11) + 10.0/3*sin(8*t + 8.0/5) + 28.0/5*sin(12*t + 23.0/14) + 36.0/5*sin(13*t + 13.0/8) + 47.0/10*sin(16*t + 11.0/7) + 5.0/3*sin(18*t + 8.0/5) + 17.0/10*sin(19*t + 5.0/3) + 10.0/7*sin(20*t + 12.0/7) + 31.0/12*sin(21*t + 23.0/14) + 4.0/13*sin(24*t + 12.0/7) + 27.0/10*sin(25*t + 17.0/10) + 7.0/9*sin(26*t + 17.0/10) + 12.0/23*sin(28*t + 5.0/3) + 4.0/3*sin(29*t + 13.0/8) + 7.0/15*sin(31*t + 19.0/11) + 13.0/6*sin(32*t + 17.0/10) + 3.0/10*sin(33*t + 53.0/12) + 1.0/7*sin(38*t + 15.0/8) + 10.0/11*sin(42*t + 5.0/3) + 9.0/19*sin(43*t + 61.0/13) + 2.0/3*sin(44*t + 17.0/10) + 598.0/11)*theta(47*PI -t)*theta(t - 43*PI) + (-5.0/12*sin(17.0/11 - 29*t) - 7.0/11*sin(16.0/11 - 28*t) - 2.0/9*sin(10.0/11 - 27*t) - 21.0/10*sin(26.0/17 - 26*t) - 4.0/3*sin(17.0/11 - 24*t) - 2.0/9*sin(7.0/6 - 23*t) - 7.0/12*sin(3.0/2 - 22*t) - 7.0/6*sin(11.0/7 - 20*t) - 3.0/8*sin(13.0/9 - 14*t) - 13.0/7*sin(11.0/7 - 13*t) - 12.0/7*sin(14.0/9 - 6*t) - 23.0/10*sin(14.0/9 - 5*t) - 4.0/5*sin(20.0/13 - 4*t) - 4.0/9*sin(3.0/2 - 2*t) - 418.0/31*sin(11.0/7 -t) + 10.0/9*sin(3*t + 33.0/7) + 7.0/13*sin(7*t + 61.0/13) + 19.0/14*sin(8*t + 21.0/13) + 52.0/51*sin(9*t + 5.0/3) + 29.0/6*sin(10*t + 13.0/8) + 69.0/11*sin(11*t + 18.0/11) + 101.0/15*sin(12*t + 13.0/8) + 4.0/13*sin(15*t + 19.0/11) + 9.0/13*sin(16*t + 16.0/9) + 24.0/13*sin(17*t + 13.0/8) + 28.0/29*sin(18*t + 47.0/10) + 11.0/7*sin(19*t + 8.0/5) + 28.0/17*sin(21*t + 13.0/8) + 19.0/7*sin(25*t + 13.0/8) + 9.0/7*sin(30*t + 27.0/16) + 8.0/15*sin(31*t + 32.0/7) + 11.0/6*sin(32*t + 22.0/13) + 1.0/8*sin(33*t + 23.0/7) + 23.0/17*sin(34*t + 16.0/9) + 19.0/14*sin(35*t + 19.0/11) + 1.0/2*sin(36*t + 14.0/3) + 5.0/9*sin(37*t + 11.0/6) + 31.0/16*sin(38*t + 23.0/13) + 2159.0/20)*theta(43*PI -t)*theta(t - 39*PI) + (-1.0/5*sin(13.0/9 - 75*t) - 5.0/13*sin(22.0/15 - 73*t) - 4.0/11*sin(10.0/7 - 72*t) - 3.0/14*sin(3.0/2 - 71*t) - 1.0/5*sin(17.0/11 - 70*t) - 1.0/6*sin(10.0/7 - 68*t) - 1.0/14*sin(1.0/20 - 67*t) - 4.0/15*sin(7.0/5 - 63*t) - 6.0/11*sin(28.0/19 - 62*t) - 3.0/4*sin(17.0/11 - 49*t) - 1.0/5*sin(3.0/2 - 45*t) - 5.0/11*sin(7.0/5 - 44*t) - 9.0/13*sin(16.0/11 - 40*t) - 6.0/11*sin(17.0/11 - 36*t) - 17.0/6*sin(14.0/9 - 28*t) - 53.0/14*sin(14.0/9 - 26*t) - 24.0/5*sin(25.0/17 - 24*t) - 57.0/7*sin(23.0/15 - 21*t) - 37.0/6*sin(3.0/2 - 20*t) - 2.0/5*sin(16.0/13 - 16*t) - 2.0/9*sin(9.0/7 - 14*t) - 6.0/7*sin(20.0/13 - 13*t) - 1.0/26*sin(5.0/7 - 7*t) - 1.0/11*sin(12.0/11 - 5*t) - 61.0/30*sin(11.0/7 - 2*t) - 91.0/15*sin(11.0/7 -t) + 9.0/7*sin(3*t + 47.0/10) + 4.0/9*sin(4*t + 14.0/3) + 19.0/14*sin(6*t + 47.0/10) + 6.0/7*sin(8*t + 14.0/3) + 7.0/3*sin(9*t + 11.0/7) + 4.0/9*sin(10*t + 51.0/11) + 11.0/15*sin(11*t + 16.0/11) + 1.0/19*sin(12*t + 58.0/13) + 2.0/7*sin(15*t + 14.0/3) + 4.0/11*sin(17*t + 49.0/11) + 12.0/7*sin(18*t + 14.0/3) + 16.0/7*sin(19*t + 14.0/3) + 241.0/20*sin(22*t + 13.0/8) + 7.0/8*sin(23*t + 11.0/7) + 49.0/10*sin(25*t + 8.0/5) + 23.0/8*sin(27*t + 8.0/5) + 11.0/5*sin(29*t + 8.0/5) + 12.0/7*sin(30*t + 47.0/10) + 7.0/4*sin(31*t + 11.0/7) + 7.0/9*sin(32*t + 79.0/17) + 5.0/4*sin(33*t + 14.0/9) + 1.0/7*sin(34*t + 121.0/60) + 5.0/11*sin(35*t + 13.0/9) + 8.0/9*sin(37*t + 23.0/14) + 3.0/5*sin(38*t + 14.0/3) + 5.0/12*sin(39*t + 14.0/9) + 1.0/3*sin(41*t + 28.0/17) + 3.0/10*sin(42*t + 5.0/3) + 5.0/7*sin(43*t + 23.0/14) + 7.0/15*sin(46*t + 27.0/16) + 3.0/5*sin(47*t + 47.0/10) + 1.0/4*sin(48*t + 14.0/9) + 2.0/11*sin(50*t + 7.0/4) + 1.0/7*sin(51*t + 47.0/10) + 3.0/8*sin(52*t + 23.0/14) + 1.0/5*sin(53*t + 18.0/11) + 2.0/9*sin(54*t + 14.0/9) + 2.0/5*sin(55*t + 18.0/11) + 1.0/10*sin(56*t + 13.0/8) + 5.0/13*sin(57*t + 26.0/17) + 2.0/7*sin(58*t + 5.0/3) + 4.0/11*sin(59*t + 5.0/3) + 1.0/19*sin(60*t + 34.0/13) + 1.0/24*sin(61*t + 16.0/5) + 1.0/8*sin(64*t + 16.0/9) + 2.0/9*sin(65*t + 20.0/11) + 3.0/13*sin(66*t + 17.0/11) + 2.0/5*sin(69*t + 5.0/3) + 1.0/16*sin(74*t + 33.0/8) + 1091.0/8)*theta(39*PI -t)*theta(t - 35*PI) + (-4.0/15*sin(26.0/17 - 38*t) - 4.0/9*sin(11.0/7 - 34*t) - 6.0/11*sin(17.0/11 - 12*t) - 10.0/13*sin(14.0/9 - 10*t) - 81.0/40*sin(14.0/9 - 9*t) - 5.0/12*sin(28.0/19 - 7*t) + 16.0/15*sin(t + 11.0/7) + 38.0/15*sin(2*t + 11.0/7) + 32.0/7*sin(3*t + 14.0/9) + 8.0/11*sin(4*t + 14.0/9) + 97.0/49*sin(5*t + 14.0/9) + 2.0/7*sin(6*t + 11.0/7) + 3.0/8*sin(8*t + 14.0/9) + 11.0/10*sin(11*t + 17.0/11) + 5.0/16*sin(13*t + 5.0/3) + 17.0/5*sin(14*t + 14.0/9) + 3.0/5*sin(15*t + 8.0/5) + 35.0/6*sin(16*t + 20.0/13) + 69.0/11*sin(17*t + 11.0/7) + 91.0/11*sin(18*t + 47.0/10) + 126.0/13*sin(19*t + 14.0/9) + 32.0/7*sin(20*t + 32.0/21) + 9.0/10*sin(21*t + 60.0/13) + 29.0/6*sin(22*t + 14.0/3) + 19.0/7*sin(23*t + 51.0/11) + 4.0/5*sin(24*t + 61.0/13) + 9.0/8*sin(25*t + 3.0/2) + 33.0/14*sin(26*t + 35.0/23) + 19.0/13*sin(27*t + 3.0/2) + 7.0/11*sin(28*t + 14.0/3) + 22.0/15*sin(29*t + 89.0/19) + 7.0/6*sin(30*t + 65.0/14) + 39.0/19*sin(31*t + 14.0/3) + 11.0/8*sin(32*t + 14.0/3) + 5.0/7*sin(33*t + 14.0/3) + 1.0/11*sin(35*t + 7.0/4) + 16.0/11*sin(36*t + 47.0/10) + 16.0/15*sin(37*t + 14.0/9) + 6.0/13*sin(39*t + 5.0/3) + 10.0/11*sin(40*t + 79.0/17) + 4.0/13*sin(41*t + 5.0/3) + 6.0/13*sin(42*t + 28.0/19) + 1.0/5*sin(43*t + 11.0/7) + 1.0/96*sin(44*t + 4.0/3) + 6.0/17*sin(45*t + 14.0/3) + 1.0/7*sin(46*t + 59.0/13) + 3.0/11*sin(47*t + 38.0/25) + 4.0/7*sin(48*t + 14.0/3) + 2521.0/19)*theta(35*PI -t)*theta(t - 31*PI) + (-1.0/5*sin(26.0/17 - 4*t) + 185.0/12*sin(t + 11.0/7) + 19.0/10*sin(2*t + 33.0/7) + 29.0/15*sin(3*t + 11.0/7) + 6.0/11*sin(5*t + 8.0/5) + 3.0/4*sin(6*t + 17.0/11) + 4.0/7*sin(7*t + 14.0/9) + 2.0/5*sin(8*t + 14.0/9) + 1.0/2*sin(9*t + 3.0/2) + 7.0/12*sin(10*t + 20.0/13) + 37.0/25*sin(11*t + 20.0/13) + 17.0/6*sin(12*t + 17.0/11) + 41.0/11*sin(13*t + 17.0/11) + 19.0/5*sin(14*t + 20.0/13) + 4.0/5*sin(15*t + 20.0/13) + 110.0/37*sin(16*t + 61.0/13) + 6.0/7*sin(17*t + 61.0/13) + 23.0/24*sin(18*t + 14.0/9) + 3.0/2*sin(19*t + 51.0/11) + 11.0/6*sin(20*t + 14.0/3) + 1.0/10*sin(21*t + 19.0/12) + 1.0/25*sin(22*t + 169.0/56) + 17.0/13*sin(23*t + 14.0/3) + 7.0/10*sin(24*t + 32.0/7) + 28.0/13*sin(25*t + 79.0/17) + 48.0/19*sin(26*t + 14.0/3) + 7.0/4*sin(27*t + 51.0/11) + 20.0/21*sin(28*t + 14.0/3) + 17.0/10*sin(29*t + 20.0/13) + 17.0/10*sin(30*t + 3.0/2) + 3.0/7*sin(31*t + 10.0/7) + 7.0/6*sin(32*t + 37.0/8) + 2.0/3*sin(33*t + 61.0/13) + 11.0/6*sin(34*t + 3.0/2) + 3.0/10*sin(35*t + 51.0/11) + 23.0/14*sin(36*t + 14.0/3) + 6.0/5*sin(37*t + 26.0/17) + 2.0/5*sin(38*t + 47.0/10) + 4.0/7*sin(39*t + 37.0/8) + 13.0/14*sin(40*t + 14.0/9) + 1361.0/12)*theta(31*PI -t)*theta(t - 27*PI) + (-1.0/9*sin(19.0/13 - 35*t) - 1.0/8*sin(31.0/21 - 30*t) - 1.0/26*sin(15.0/11 - 26*t) - 1.0/19*sin(19.0/15 - 22*t) - 1.0/9*sin(3.0/2 - 17*t) - 1.0/5*sin(3.0/2 - 13*t) - 1.0/35*sin(8.0/7 - 7*t) - 38.0/7*sin(11.0/7 - 2*t) - 53.0/12*sin(14.0/9 -t) + 29.0/4*sin(3*t + 11.0/7) + 47.0/11*sin(4*t + 8.0/5) + 11.0/4*sin(5*t + 19.0/12) + 5.0/4*sin(6*t + 11.0/7) + 1.0/22*sin(8*t + 7.0/5) + 2.0/9*sin(9*t + 19.0/12) + 4.0/7*sin(10*t + 8.0/5) + 4.0/7*sin(11*t + 13.0/8) + 8.0/15*sin(12*t + 8.0/5) + 5.0/9*sin(15*t + 18.0/11) + 3.0/10*sin(16*t + 28.0/17) + 1.0/9*sin(18*t + 37.0/25) + 1.0/8*sin(19*t + 27.0/16) + 5.0/14*sin(20*t + 18.0/11) + 1.0/91*sin(23*t + 13.0/3) + 2.0/5*sin(24*t + 18.0/11) + 1.0/51*sin(25*t + 29.0/15) + 1.0/10*sin(27*t + 21.0/13) + 1.0/43*sin(28*t + 21.0/10) + 1.0/9*sin(29*t + 13.0/8) + 1.0/14*sin(31*t + 8.0/5) + 1.0/11*sin(32*t + 23.0/13) + 1.0/12*sin(33*t + 12.0/7) - 6173.0/49)*theta(27*PI -t)*theta(t - 23*PI) + (-10.0/13*sin(11.0/7 - 6*t) - 139.0/46*sin(11.0/7 - 4*t) - 16.0/11*sin(14.0/9 - 3*t) - 200.0/13*sin(11.0/7 - 2*t) + 92.0/13*sin(t + 11.0/7) + 19.0/18*sin(5*t + 11.0/7) - 1065.0/13)*theta(23*PI -t)*theta(t - 19*PI) + (-1.0/43*sin(3.0/2 - 37*t) - 1.0/11*sin(11.0/7 - 33*t) - 1.0/23*sin(15.0/11 - 27*t) - 20.0/9*sin(11.0/7 - 3*t) - 329.0/11*sin(11.0/7 -t) + 238.0/13*sin(2*t + 11.0/7) + 4.0/11*sin(4*t + 11.0/7) + 5.0/16*sin(5*t + 47.0/10) + 18.0/7*sin(6*t + 11.0/7) + 3.0/10*sin(7*t + 47.0/10) + 17.0/11*sin(8*t + 47.0/10) + 39.0/20*sin(9*t + 47.0/10) + 4.0/5*sin(10*t + 47.0/10) + 3.0/10*sin(11*t + 14.0/3) + 1.0/62*sin(12*t + 19.0/9) + 1.0/7*sin(13*t + 51.0/11) + 1.0/14*sin(14*t + 47.0/10) + 2.0/9*sin(15*t + 47.0/10) + 2.0/13*sin(16*t + 61.0/13) + 1.0/13*sin(17*t + 47.0/10) + 2.0/13*sin(18*t + 11.0/7) + 1.0/9*sin(19*t + 11.0/7) + 2.0/11*sin(20*t + 14.0/9) + 1.0/25*sin(21*t + 7.0/5) + 1.0/11*sin(22*t + 25.0/17) + 1.0/32*sin(23*t + 15.0/11) + 2.0/9*sin(24*t + 17.0/11) + 1.0/6*sin(25*t + 35.0/23) + 1.0/6*sin(26*t + 20.0/13) + 1.0/37*sin(28*t + 11.0/8) + 1.0/16*sin(29*t + 16.0/11) + 1.0/6*sin(30*t + 17.0/11) + 1.0/19*sin(31*t + 22.0/15) + 1.0/54*sin(35*t + 3.0/2) + 1.0/13*sin(36*t + 21.0/13) + 1.0/15*sin(38*t + 47.0/10) + 1.0/12*sin(39*t + 79.0/17) - 843.0/11)*theta(19*PI -t)*theta(t - 15*PI) + (-1.0/5*sin(5.0/9 - 10*t) - 2.0/11*sin(5.0/9 - 8*t) - 49.0/13*sin(9.0/8 - 2*t) + 35.0/18*sin(t + 19.0/8) + 36.0/35*sin(3*t + 91.0/30) + 16.0/9*sin(4*t + 40.0/11) + 41.0/40*sin(5*t + 41.0/20) +sin(6*t + 22.0/5) + 2.0/9*sin(7*t + 1.0/11) + 5.0/7*sin(9*t + 2.0/5) - 367.0/16)*theta(15*PI -t)*theta(t - 11*PI) + (-17.0/10*sin(14.0/9 - 4*t) - 69.0/13*sin(16.0/15 - 2*t) + 49.0/12*sin(t + 15.0/8) + 35.0/17*sin(3*t + 1.0/4) + 8.0/7*sin(5*t + 62.0/25) + 9.0/10*sin(6*t + 46.0/11) + 2.0/9*sin(7*t + 4.0/5) + 15.0/16*sin(8*t + 9.0/2) - 565.0/14)*theta(11*PI -t)*theta(t - 7*PI) + (-3.0/7*sin(9.0/10 - 6*t) - 7.0/4*sin(15.0/16 - 4*t) - 70.0/11*sin(18.0/17 - 2*t) + 27.0/4*sin(t + 2.0/3) + 14.0/5*sin(3*t + 4.0/5) + 21.0/13*sin(5*t + 14.0/11) - 9.0/4)*theta(7*PI -t)*theta(t - 3*PI) + (-2.0/7*sin(8.0/9 - 6*t) - 17.0/10*sin(24.0/23 - 4*t) - 108.0/17*sin(13.0/11 - 2*t) - 75.0/7*sin(10.0/11 -t) + 2*sin(3*t + 1.0/10) + 11.0/9*sin(5*t + 47.0/46) - 276.0/11)*theta(3*PI -t)*theta(t +PI))*theta(sqrt(sgn(sin(t/2))));
}
